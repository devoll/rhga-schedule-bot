name: Docker Image CI

on:
  push:
    branches: [ "master" ]

# Add permissions for the GITHUB_TOKEN
permissions:
  contents: read
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Run security audit
        run: npm audit --audit-level=high --omit=dev

#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Install dependencies
#        run: npm ci
#      - name: Run tests
#        run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    needs: [ lint, audit ]
    # Add permissions for this job
    permissions:
      contents: write
      packages: write
    steps:

      # 1) Клонируем весь репозиторий, чтобы получить историю коммитов
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: 'Version Bump'
        uses: 'paramsinghvc/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-prefix: 'v'

      - name: Get new version
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "New version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.get-version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [ build-and-push ]
    container:
      image: dockhost/cli:latest
    steps:
      - name: Login to Dockhost
        run: |
          dockhost config login -u "${{ secrets.DOCKHOST_LOGIN }}" -p "${{ secrets.DOCKHOST_PASSWORD }}"

      - name: Get current version
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "New version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Container Image
        run: |
          dockhost container update-image --name "${{ secrets.DOCKHOST_CONTAINER }}" --image ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.get-version.outputs.version }} --project "${{ secrets.DOCKHOST_PROJECT }}"
